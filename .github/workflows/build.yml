
name: Build and Release

on:
  push:
    branches: [ "main" ]

jobs:
  build:
    runs-on: ubuntu-latest
    permissions:
      contents: write
    steps:
    - uses: actions/checkout@v3
    - name: set up JDK 17
      uses: actions/setup-java@v3
      with:
        java-version: '17'
        distribution: 'temurin'

    - name: Setup Gradle
      uses: gradle/actions/setup-gradle@v3

    - name: Make gradlew executable and ensure wrapper is present
      run: |
        chmod +x gradlew
        ./gradlew wrapper --gradle-version 8.14.3

    - name: Decode Keystore
      run: echo "${{ secrets.SIGNING_KEYSTORE_BASE64 }}" | base64 --decode > app/my-release-key.jks

    - name: Build with Gradle
      run: ./gradlew assembleRelease
      env:
        KEYSTORE_PATH: app/my-release-key.jks
        KEYSTORE_PASSWORD: ${{ secrets.SIGNING_KEYSTORE_PASSWORD }}
        KEY_ALIAS: ${{ secrets.SIGNING_KEY_ALIAS }}
        KEY_PASSWORD: ${{ secrets.SIGNING_KEY_PASSWORD }}

    - name: Extract version name
      id: version
      run: echo "VERSION_NAME=$(grep versionName app/build.gradle | sed -n 's/.*versionName \"\(.*\)\"/\1/p')" >> $GITHUB_ENV

    - name: List APK files
      run: ls -l app/build/outputs/apk/release/

    - name: Create or Update Release
      uses: softprops/action-gh-release@v2
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      with:
        tag_name: v${{ env.VERSION_NAME }}
        name: Release v${{ env.VERSION_NAME }}
        body: |
          Automated release for version ${{ env.VERSION_NAME }}
        draft: false
        prerelease: false
        files: app/build/outputs/apk/release/app-release.apk
        overwrite: true
